import type { JSX } from "solid-js";
import type { Queries, BoundFunction, prettyFormat } from "@testing-library/dom";
export interface Ref {
    container: HTMLElement;
    dispose: () => void;
}
export declare type Ui = () => JSX.Element;
export interface Options {
    container?: HTMLElement;
    baseElement?: HTMLElement;
    queries?: Queries;
    hydrate?: boolean;
}
export declare type Extra = {
    [P in keyof Queries]: BoundFunction<Queries[P]>;
};
export declare type DebugFn = (baseElement?: HTMLElement | HTMLElement[], maxLength?: number, options?: prettyFormat.OptionsReceived) => void;
export declare type Result = {
    container: HTMLElement;
    baseElement: HTMLElement;
    debug: DebugFn;
    unmount: () => void;
} & Extra;
